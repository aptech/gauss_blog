/*
**
*/
new;
library gml;
rndseed 8906876;

/*
** Load datafile
*/
load_path = "data";
fname = "/airline_satisfaction.gdat";

// Load data
airline_data = loadd(load_path $+ fname);
//airline_data = delcols(airline_data, "id");


/*
** Check for data cleaning
** issues
*/
// Check for duplicates
isunique(airline_data);

// Summary statistics
call dstatmt(airline_data);


/*
** By gender
*/
plotCatBar(airline_data, "satisfaction", "Gender");

/*
** By Age
*/
// Set age categories
// Cut points for data in 'x'
// Class 0: Under 20
// Class 1: 21 - 30
// Class 2: 31 - 40
// Class 3: 41 - 50
// Class 4: 51 - 60
// Class 5: 61 - 70
// Class 6: Over 70
cut_pts = { 20, 
            30, 
            40, 
            50, 
            60, 
            70};
            
// Create numeric classes
age_new = reclassifycuts(airline_data[., "Age"], cut_pts, 0);

// Generate labels to recode to
to = "20 and Under"$|
       "21-30"$|
       "31-40"$|
       "41-50"$|
       "51-60"$|
       "61-70"$|
       "Over 70";

// Recode to categorical variable
age_cat = reclassify(age_new, unique(age_new), to);

// Convert to dataframe
age_cat = asDF(age_cat, "Age Group");

 // Plot
plotOpenWindow();
plotCatBar(airline_data~age_cat, "satisfaction", "Age Group");
      
/*
** By flight distance
*/       
// Set distance categories
cut_pts = { 1000, 
            1500, 
            2000, 
            2500, 
            3000,
            3500};

// Create numeric classes
distance_new = reclassifycuts(airline_data[., "Flight Distance"], cut_pts, 0);

// Generate labels to recode to
to = "1000 and Under"$|
       "1001-1500"$|
       "1501-2000"$|
       "2001-2500"$|
       "2501-3000"$|
       "3000-3500"$|
       "Over 3500";

// Recode to categorical variable
distance_cat = reclassify(distance_new, unique(distance_new), to);

// Convert to dataframe
distance_cat = asDF(distance_cat, "Flight Range");

// Check frequencies
frequency(distance_cat, "Flight Range");

// Plot by flight range group
plotOpenWindow();
plotCatBar(airline_data~distance_cat, "satisfaction", "Flight Range");

/*
** By class distance
*/ 
plotOpenWindow();
plotCatBar(airline_data, "satisfaction", "Class");

/*
** By customer type
*/ 
plotOpenWindow();
plotCatBar(airline_data, "satisfaction", "Customer Type");


proc (0) = plotCatBar(data, var_interest, ...);
    local ndynargs, byvar, tmpdata, labels, keys, y1, y2, clrs;
    
    ndynargs = dynargsCount();
    
    // Get variable to split by
    byvar = dynargsGet(1);
    
    // Plot Control Structure
    struct plotControl ctl;
    ctl = plotGetDefaults("bar");
    
    // Get Labels
    { labels, keys } = getColLabels(data, var_interest);
    
    /* 
    ** Format plot
    */
    // Fonts
    plotSetFonts(&ctl, "title", "Arial", 18);
    plotSetFonts(&ctl, "xticks yticks yaxis", "Arial", 14);
    plotSetFonts(&ctl, "legend", "Arial", 14);
    
    // Y axis
    plotSetYRange(&ctl, 0, 100, 20, 0);
    plotSetYAxisLabel(&ctl, "Percent");
    
    // Title
    plotSetTitle(&ctl, "Customer Satisfaction");
    
    // Canvas Size
    plotCanvasSize("px", 800|600);
    
    // Color
    clrs = getColorPalette("Set3", 8);
    plotSetFill(&ctl, 1, 0.6, clrs);
    
    if byvar $!= "";
        local legend;
        
        { legend, keys } = getColLabels(data, byvar);
        
        plotSetLegend(&ctl, legend);
        plotSetLegendTitle(&ctl, byvar, "Arial", 14);
        
        // Loop through cats
        for i(1, rows(legend), 1);
            tmpdata = selif(data, data[., byvar] .== legend[i]);
            
            // Count data
            y1 = sumc(tmpdata[., var_interest] .== labels[1])./rows(tmpdata)*100;
            y2 = sumc(tmpdata[., var_interest] .== labels[2])./rows(tmpdata)*100;
            
            if i==1;
                plotBar(ctl, labels, y1|y2);
            else;
                plotAddBar(labels, y1|y2);
            endif;
        endfor;
    else;
        // Count data
        y1 = sumc(data[., var_interest] .== labels[1])./rows(data)*100;
        y2 = sumc(data[., var_interest] .== labels[2])./rows(data)*100;
        
         plotBar(ctl, labels, y1|y2);
    endif;
endp;


