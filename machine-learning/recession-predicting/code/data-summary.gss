new;
library cmlmt, dc;

/*
** Load data from fred
*/
// Ahmed-Chinn data
ac_data = packr(loadd("data/ahmed_chinn_data.xlsx", ". + date($date, '%YM%m')"));

/*
** Load daily data that must be 
** aggregated to monthly 
*/
params = fred_set("frequency", "m", "aggregation_method", "avg");

// Load daily occurring data
// but aggregate to monthly
data_agg = fred_load("T10Y2Y + T10Y3M + NFCI + DGS2 + DGS10", params);

/*
** Recession data, FFR, manufacturing,
** NBER and  Moody AAA bonds
*/
// Monthly growth rate data
params_mg = fred_set("units", "pch");
data_mon_gr = fred_load("PAYEMS + INDPRO + RPI", params_mg);

// Annual growth rate data
//params_ag =  fred_set("units", "pc1");
params_ag =  fred_set("units", "ch1");
data_a_gr = fred_load("UNRATE", params_ag);

// Other monthly data
data_mon = fred_load("USREC + AAA + BAA + MCUMFN + FEDFUNDS + TB3MS");

/*
** Join data
*/
reg_data = outerJoin(data_agg, "date", data_mon_gr, "date");
reg_data = outerJoin(reg_data, "date", data_a_gr, "date");
reg_data = outerJoin(reg_data, "date", data_mon, "date");

// Filter dates before 1960
reg_data = delif(reg_data, reg_data[., "date"] .< "1960");

// Data statistics
dstatmt(reg_data);

/*
** Data transformations for model
*/

// Corporate credit spread
corp_spread = asDF(reg_data[., "AAA"] - reg_data[., "BAA"], "corp");
yld = asDF(reg_data[., "DGS10"] - reg_data[., "TB3MS"], "yld");

// Get lags of yld and corporate spread
ir_lags = asDF(getX(yld~corp_spread, "yld"$|"corp", 6|12), "yld_l6", "yld_l12", "corp_l6", "corp_l12");

// Get lags of NBER variables
nber_lags = asDF(getX(reg_data, "INDPRO"$|"PAYEMS"$|"RPI"$|"UNRATE", 1), "ip_l", "nfp_l", "rpi_l", "un_l");

final_data = packr(reg_data[., "date" "USREC" "INDPRO" "PAYEMS" "RPI" "UNRATE"]~corp_spread~yld~ir_lags~nber_lags);
saved(final_data, "data/final_data.gdat");

proc (1) = getX(x, varlist, lags);
    local num_x, maxL, reg_x;
    
    num_x = rows(varlist);
    maxL = rows(lags);
    
    if num_x == 1;// Get x and lags
        if lags>0;
            reg_x = lagn(x[., varlist], lags);
        else;
            reg_x = x[., varlist];
        endif;
    else;
        reg_x = zeros(rows(x), maxL*num_x);
        for i(1, num_x, 1);
            reg_x[., (i-1)*maxL+1:i*maxL] = lagn(x[., varlist[i]], lags);
        endfor;
    endif;
    
    retp(reg_x);
endp;


//// Plot original data
//struct plotControl ctl2;
//ctl2 = plotGetDefaults("xy");

//// Set up fonts
//plotSetFonts(&ctl2, "axes ticks", "Arial", 14);
//plotSetFonts(&ctl2, "legend", "Arial", 12);

//// Set up legend
//plotSetLegend(&ctl2, "T10Y2Y"$|"T10Y3M"$|"NFCI"$|"SPREAD10_3FOR");
//plotXY(ctl2, reg_data[., "date"], reg_data[., "T10Y2Y" "T10Y3M" "NFCI" "SPREAD10_3FOR"]);

//saved(reg_data, "data/reg_data.gdat");

